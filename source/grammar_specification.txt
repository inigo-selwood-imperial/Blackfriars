# Forge temporary stripped grammar specification
# Inigo Selwood 2020 {c}

# Variable assignment
assignment: variable_name assignment_operator expression

# Variable name
variable_name: {'a' : 'z'} | '_'

# Expression
expression: (value <:1>[arithmetic_operator expression]) | ('{' expression '}')

# Value
value: <:1>[unary_operator] variable_name | constant

# Operator
operator: assignment_operator | arithmetic_operator | unary_operator |
        comparison_operator
assignment_operator: '=' | binary_assignment_operator |
        bitwise_assignment_operator
arithmetic_operator: binary_arithmetic_operator | bitwise_arithmetic_operator

# Assignment operators
binary_assignment_operator: '+=' | '-=' | '*=' | '/='
bitwise_assignment_operator: '%=' | '&=' | '|=' | '^=' | '<<=' | '>>='
binary_arithmetic_operator: '+' | '-' | '*' | '/'
bitwise_arithmetic_operator: '<<' | '>>' | '^' | '&' | '|' | '~'
unary_operator: 'not' | '!' | '~'
comparison_operator: 'is' | '==' | '!=' | '<' | '>' | '<=' | '>='
logical_operator: 'and' | 'or' | '&&' | '||'

# Constants
constant: numeric_constant, string_constant, boolean_constant
boolean_constant: 'true' | 'false'
numeric_constant: integer <:1>['.' integer <:1>['e' | 'E' integer]]
string_constant: ('\'' [identifier] '\'') | ('\"' [identifier] '\"')

# Integer
integer: {'0' : '9'}

# Identifier
identifier: {' ' : '~'}
